//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DRP.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModeloDRP : DbContext
    {
        public ModeloDRP()
            : base("name=ModeloDRP")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccesoCaptura> AccesoCaptura { get; set; }
        public virtual DbSet<Aplicacion> Aplicacion { get; set; }
        public virtual DbSet<Area> Area { get; set; }
        public virtual DbSet<BitacoraError> BitacoraError { get; set; }
        public virtual DbSet<DefinicionCaptura> DefinicionCaptura { get; set; }
        public virtual DbSet<Empleado> Empleado { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Grupo> Grupo { get; set; }
        public virtual DbSet<Idioma> Idioma { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<OpcionMenuIdioma> OpcionMenuIdioma { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<PlaneacionCaptura> PlaneacionCaptura { get; set; }
        public virtual DbSet<Puesto> Puesto { get; set; }
        public virtual DbSet<SesionUsuario> SesionUsuario { get; set; }
        public virtual DbSet<SesionUsuarioHistorial> SesionUsuarioHistorial { get; set; }
        public virtual DbSet<Domicilio> Domicilio { get; set; }
        public virtual DbSet<ErrorPersonalizado> ErrorPersonalizado { get; set; }
        public virtual DbSet<Privilegio> Privilegio { get; set; }
        public virtual DbSet<PrivilegioAsignado> PrivilegioAsignado { get; set; }
        public virtual DbSet<Sistema> Sistema { get; set; }
        public virtual DbSet<Suscripcion> Suscripcion { get; set; }
        public virtual DbSet<Terminologia> Terminologia { get; set; }
        public virtual DbSet<TerminologiaIdioma> TerminologiaIdioma { get; set; }
        public virtual DbSet<UnidadNegocio> UnidadNegocio { get; set; }
        public virtual DbSet<OpcionMenu> OpcionMenu { get; set; }
        public virtual DbSet<ESTADO> ESTADO { get; set; }
        public virtual DbSet<ModuloSistema> ModuloSistema { get; set; }
        public virtual DbSet<MUNICIPIO> MUNICIPIO { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<NivelRed> NivelRed { get; set; }
        public virtual DbSet<CuentaUsuario> CuentaUsuario { get; set; }
        public virtual DbSet<ImagenCarrusel> ImagenCarrusel { get; set; }
    
        public virtual int ActualizarPrivilegios(string accion, string tipoElemento, Nullable<int> idElemento, string privilegios)
        {
            var accionParameter = accion != null ?
                new ObjectParameter("Accion", accion) :
                new ObjectParameter("Accion", typeof(string));
    
            var tipoElementoParameter = tipoElemento != null ?
                new ObjectParameter("TipoElemento", tipoElemento) :
                new ObjectParameter("TipoElemento", typeof(string));
    
            var idElementoParameter = idElemento.HasValue ?
                new ObjectParameter("IdElemento", idElemento) :
                new ObjectParameter("IdElemento", typeof(int));
    
            var privilegiosParameter = privilegios != null ?
                new ObjectParameter("Privilegios", privilegios) :
                new ObjectParameter("Privilegios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarPrivilegios", accionParameter, tipoElementoParameter, idElementoParameter, privilegiosParameter);
        }
    
        public virtual ObjectResult<ObtenerPrivilegios_Result> ObtenerPrivilegios(Nullable<int> idUsuario, Nullable<int> idPerfil, Nullable<int> idGrupo)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var idGrupoParameter = idGrupo.HasValue ?
                new ObjectParameter("IdGrupo", idGrupo) :
                new ObjectParameter("IdGrupo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerPrivilegios_Result>("ObtenerPrivilegios", idUsuarioParameter, idPerfilParameter, idGrupoParameter);
        }
    
        public virtual ObjectResult<ObtenerPrivilegiosPorTipo_Result> ObtenerPrivilegiosPorTipo(string tipoElemento, Nullable<int> idElemento)
        {
            var tipoElementoParameter = tipoElemento != null ?
                new ObjectParameter("TipoElemento", tipoElemento) :
                new ObjectParameter("TipoElemento", typeof(string));
    
            var idElementoParameter = idElemento.HasValue ?
                new ObjectParameter("IdElemento", idElemento) :
                new ObjectParameter("IdElemento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerPrivilegiosPorTipo_Result>("ObtenerPrivilegiosPorTipo", tipoElementoParameter, idElementoParameter);
        }
    
        public virtual ObjectResult<ObtenerPlaneacionCaptura_Result> ObtenerPlaneacionCaptura(Nullable<int> idAplicacion, Nullable<int> idSuscriptor, string idUsuario, string idPerfil, string idArea, string idPuesto, string idGrupos, string idClasificacionCaptura, string idOtro)
        {
            var idAplicacionParameter = idAplicacion.HasValue ?
                new ObjectParameter("IdAplicacion", idAplicacion) :
                new ObjectParameter("IdAplicacion", typeof(int));
    
            var idSuscriptorParameter = idSuscriptor.HasValue ?
                new ObjectParameter("IdSuscriptor", idSuscriptor) :
                new ObjectParameter("IdSuscriptor", typeof(int));
    
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var idPerfilParameter = idPerfil != null ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(string));
    
            var idAreaParameter = idArea != null ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(string));
    
            var idPuestoParameter = idPuesto != null ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(string));
    
            var idGruposParameter = idGrupos != null ?
                new ObjectParameter("IdGrupos", idGrupos) :
                new ObjectParameter("IdGrupos", typeof(string));
    
            var idClasificacionCapturaParameter = idClasificacionCaptura != null ?
                new ObjectParameter("IdClasificacionCaptura", idClasificacionCaptura) :
                new ObjectParameter("IdClasificacionCaptura", typeof(string));
    
            var idOtroParameter = idOtro != null ?
                new ObjectParameter("IdOtro", idOtro) :
                new ObjectParameter("IdOtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerPlaneacionCaptura_Result>("ObtenerPlaneacionCaptura", idAplicacionParameter, idSuscriptorParameter, idUsuarioParameter, idPerfilParameter, idAreaParameter, idPuestoParameter, idGruposParameter, idClasificacionCapturaParameter, idOtroParameter);
        }
    
        public virtual ObjectResult<ObtenerTerminologia_Result> ObtenerTerminologia(string clave, Nullable<int> idIdioma)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var idIdiomaParameter = idIdioma.HasValue ?
                new ObjectParameter("IdIdioma", idIdioma) :
                new ObjectParameter("IdIdioma", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTerminologia_Result>("ObtenerTerminologia", claveParameter, idIdiomaParameter);
        }
    
        public virtual ObjectResult<ObtenerTerminologias_Result> ObtenerTerminologias(Nullable<int> idAplicacion, Nullable<int> idIdioma)
        {
            var idAplicacionParameter = idAplicacion.HasValue ?
                new ObjectParameter("IdAplicacion", idAplicacion) :
                new ObjectParameter("IdAplicacion", typeof(int));
    
            var idIdiomaParameter = idIdioma.HasValue ?
                new ObjectParameter("IdIdioma", idIdioma) :
                new ObjectParameter("IdIdioma", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerTerminologias_Result>("ObtenerTerminologias", idAplicacionParameter, idIdiomaParameter);
        }
    
        public virtual ObjectResult<ConsultarPlaneaciones_Result> ConsultarPlaneaciones(string tipoCaptura, Nullable<int> idAplicacion, Nullable<int> idSuscriptor, Nullable<int> publico, string idUsuario, string idPerfil, string idGrupos, string idPuesto, string idArea, Nullable<short> idEstausCaptura)
        {
            var tipoCapturaParameter = tipoCaptura != null ?
                new ObjectParameter("TipoCaptura", tipoCaptura) :
                new ObjectParameter("TipoCaptura", typeof(string));
    
            var idAplicacionParameter = idAplicacion.HasValue ?
                new ObjectParameter("IdAplicacion", idAplicacion) :
                new ObjectParameter("IdAplicacion", typeof(int));
    
            var idSuscriptorParameter = idSuscriptor.HasValue ?
                new ObjectParameter("IdSuscriptor", idSuscriptor) :
                new ObjectParameter("IdSuscriptor", typeof(int));
    
            var publicoParameter = publico.HasValue ?
                new ObjectParameter("publico", publico) :
                new ObjectParameter("publico", typeof(int));
    
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var idPerfilParameter = idPerfil != null ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(string));
    
            var idGruposParameter = idGrupos != null ?
                new ObjectParameter("IdGrupos", idGrupos) :
                new ObjectParameter("IdGrupos", typeof(string));
    
            var idPuestoParameter = idPuesto != null ?
                new ObjectParameter("IdPuesto", idPuesto) :
                new ObjectParameter("IdPuesto", typeof(string));
    
            var idAreaParameter = idArea != null ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(string));
    
            var idEstausCapturaParameter = idEstausCaptura.HasValue ?
                new ObjectParameter("IdEstausCaptura", idEstausCaptura) :
                new ObjectParameter("IdEstausCaptura", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarPlaneaciones_Result>("ConsultarPlaneaciones", tipoCapturaParameter, idAplicacionParameter, idSuscriptorParameter, publicoParameter, idUsuarioParameter, idPerfilParameter, idGruposParameter, idPuestoParameter, idAreaParameter, idEstausCapturaParameter);
        }
    }
}
